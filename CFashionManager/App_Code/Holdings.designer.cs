#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Holdings")]
public partial class HoldingsDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttCategory(tCategory instance);
  partial void UpdatetCategory(tCategory instance);
  partial void DeletetCategory(tCategory instance);
  partial void InserttSetting(tSetting instance);
  partial void UpdatetSetting(tSetting instance);
  partial void DeletetSetting(tSetting instance);
  #endregion
	
	public HoldingsDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HoldingsConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingsDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingsDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tCategory> tCategories
	{
		get
		{
			return this.GetTable<tCategory>();
		}
	}
	
	public System.Data.Linq.Table<tSetting> tSettings
	{
		get
		{
			return this.GetTable<tSetting>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCategory")]
public partial class tCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Image;
	
	private string _Caption;
	
	private string _Content;
	
	private string _Icon;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tCategory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50)")]
	public string Caption
	{
		get
		{
			return this._Caption;
		}
		set
		{
			if ((this._Caption != value))
			{
				this.OnCaptionChanging(value);
				this.SendPropertyChanging();
				this._Caption = value;
				this.SendPropertyChanged("Caption");
				this.OnCaptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(1024)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(64)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSetting")]
public partial class tSetting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Code;
	
	private string _Title1;
	
	private string _Title2;
	
	private string _Title3;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitle1Changing(string value);
    partial void OnTitle1Changed();
    partial void OnTitle2Changing(string value);
    partial void OnTitle2Changed();
    partial void OnTitle3Changing(string value);
    partial void OnTitle3Changed();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tSetting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title1", DbType="NVarChar(128)")]
	public string Title1
	{
		get
		{
			return this._Title1;
		}
		set
		{
			if ((this._Title1 != value))
			{
				this.OnTitle1Changing(value);
				this.SendPropertyChanging();
				this._Title1 = value;
				this.SendPropertyChanged("Title1");
				this.OnTitle1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title2", DbType="NVarChar(512)")]
	public string Title2
	{
		get
		{
			return this._Title2;
		}
		set
		{
			if ((this._Title2 != value))
			{
				this.OnTitle2Changing(value);
				this.SendPropertyChanging();
				this._Title2 = value;
				this.SendPropertyChanged("Title2");
				this.OnTitle2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title3", DbType="NVarChar(1024)")]
	public string Title3
	{
		get
		{
			return this._Title3;
		}
		set
		{
			if ((this._Title3 != value))
			{
				this.OnTitle3Changing(value);
				this.SendPropertyChanging();
				this._Title3 = value;
				this.SendPropertyChanged("Title3");
				this.OnTitle3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
