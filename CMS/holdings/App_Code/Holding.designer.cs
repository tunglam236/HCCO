#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HCCO")]
public partial class HoldingDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttAccount(tAccount instance);
  partial void UpdatetAccount(tAccount instance);
  partial void DeletetAccount(tAccount instance);
  partial void InserttSlide(tSlide instance);
  partial void UpdatetSlide(tSlide instance);
  partial void DeletetSlide(tSlide instance);
  partial void InserttCategory(tCategory instance);
  partial void UpdatetCategory(tCategory instance);
  partial void DeletetCategory(tCategory instance);
  partial void InserttFeedback(tFeedback instance);
  partial void UpdatetFeedback(tFeedback instance);
  partial void DeletetFeedback(tFeedback instance);
  partial void InserttMenu(tMenu instance);
  partial void UpdatetMenu(tMenu instance);
  partial void DeletetMenu(tMenu instance);
  partial void InserttNew(tNew instance);
  partial void UpdatetNew(tNew instance);
  partial void DeletetNew(tNew instance);
  partial void InserttPartner(tPartner instance);
  partial void UpdatetPartner(tPartner instance);
  partial void DeletetPartner(tPartner instance);
  partial void InserttPersonal(tPersonal instance);
  partial void UpdatetPersonal(tPersonal instance);
  partial void DeletetPersonal(tPersonal instance);
  partial void InserttProduct(tProduct instance);
  partial void UpdatetProduct(tProduct instance);
  partial void DeletetProduct(tProduct instance);
  partial void InserttSetting(tSetting instance);
  partial void UpdatetSetting(tSetting instance);
  partial void DeletetSetting(tSetting instance);
  partial void InserttUserRole(tUserRole instance);
  partial void UpdatetUserRole(tUserRole instance);
  partial void DeletetUserRole(tUserRole instance);
  partial void InserttRole(tRole instance);
  partial void UpdatetRole(tRole instance);
  partial void DeletetRole(tRole instance);
  #endregion
	
	public HoldingDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HCCOConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public HoldingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tAccount> tAccounts
	{
		get
		{
			return this.GetTable<tAccount>();
		}
	}
	
	public System.Data.Linq.Table<tSlide> tSlides
	{
		get
		{
			return this.GetTable<tSlide>();
		}
	}
	
	public System.Data.Linq.Table<tCategory> tCategories
	{
		get
		{
			return this.GetTable<tCategory>();
		}
	}
	
	public System.Data.Linq.Table<tFeedback> tFeedbacks
	{
		get
		{
			return this.GetTable<tFeedback>();
		}
	}
	
	public System.Data.Linq.Table<tMenu> tMenus
	{
		get
		{
			return this.GetTable<tMenu>();
		}
	}
	
	public System.Data.Linq.Table<tNew> tNews
	{
		get
		{
			return this.GetTable<tNew>();
		}
	}
	
	public System.Data.Linq.Table<tPartner> tPartners
	{
		get
		{
			return this.GetTable<tPartner>();
		}
	}
	
	public System.Data.Linq.Table<tPersonal> tPersonals
	{
		get
		{
			return this.GetTable<tPersonal>();
		}
	}
	
	public System.Data.Linq.Table<tProduct> tProducts
	{
		get
		{
			return this.GetTable<tProduct>();
		}
	}
	
	public System.Data.Linq.Table<tSetting> tSettings
	{
		get
		{
			return this.GetTable<tSetting>();
		}
	}
	
	public System.Data.Linq.Table<tUserRole> tUserRoles
	{
		get
		{
			return this.GetTable<tUserRole>();
		}
	}
	
	public System.Data.Linq.Table<tRole> tRoles
	{
		get
		{
			return this.GetTable<tRole>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tAccount")]
public partial class tAccount : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Username;
	
	private string _Password;
	
	private string _FullName;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntitySet<tCategory> _tCategories;
	
	private EntitySet<tCategory> _tCategories1;
	
	private EntitySet<tFeedback> _tFeedbacks;
	
	private EntitySet<tFeedback> _tFeedbacks1;
	
	private EntitySet<tMenu> _tMenus;
	
	private EntitySet<tMenu> _tMenus1;
	
	private EntitySet<tNew> _tNews;
	
	private EntitySet<tNew> _tNews1;
	
	private EntitySet<tPartner> _tPartners;
	
	private EntitySet<tPartner> _tPartners1;
	
	private EntitySet<tPersonal> _tPersonals;
	
	private EntitySet<tPersonal> _tPersonals1;
	
	private EntitySet<tProduct> _tProducts;
	
	private EntitySet<tProduct> _tProducts1;
	
	private EntitySet<tUserRole> _tUserRoles;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tAccount()
	{
		this._tCategories = new EntitySet<tCategory>(new Action<tCategory>(this.attach_tCategories), new Action<tCategory>(this.detach_tCategories));
		this._tCategories1 = new EntitySet<tCategory>(new Action<tCategory>(this.attach_tCategories1), new Action<tCategory>(this.detach_tCategories1));
		this._tFeedbacks = new EntitySet<tFeedback>(new Action<tFeedback>(this.attach_tFeedbacks), new Action<tFeedback>(this.detach_tFeedbacks));
		this._tFeedbacks1 = new EntitySet<tFeedback>(new Action<tFeedback>(this.attach_tFeedbacks1), new Action<tFeedback>(this.detach_tFeedbacks1));
		this._tMenus = new EntitySet<tMenu>(new Action<tMenu>(this.attach_tMenus), new Action<tMenu>(this.detach_tMenus));
		this._tMenus1 = new EntitySet<tMenu>(new Action<tMenu>(this.attach_tMenus1), new Action<tMenu>(this.detach_tMenus1));
		this._tNews = new EntitySet<tNew>(new Action<tNew>(this.attach_tNews), new Action<tNew>(this.detach_tNews));
		this._tNews1 = new EntitySet<tNew>(new Action<tNew>(this.attach_tNews1), new Action<tNew>(this.detach_tNews1));
		this._tPartners = new EntitySet<tPartner>(new Action<tPartner>(this.attach_tPartners), new Action<tPartner>(this.detach_tPartners));
		this._tPartners1 = new EntitySet<tPartner>(new Action<tPartner>(this.attach_tPartners1), new Action<tPartner>(this.detach_tPartners1));
		this._tPersonals = new EntitySet<tPersonal>(new Action<tPersonal>(this.attach_tPersonals), new Action<tPersonal>(this.detach_tPersonals));
		this._tPersonals1 = new EntitySet<tPersonal>(new Action<tPersonal>(this.attach_tPersonals1), new Action<tPersonal>(this.detach_tPersonals1));
		this._tProducts = new EntitySet<tProduct>(new Action<tProduct>(this.attach_tProducts), new Action<tProduct>(this.detach_tProducts));
		this._tProducts1 = new EntitySet<tProduct>(new Action<tProduct>(this.attach_tProducts1), new Action<tProduct>(this.detach_tProducts1));
		this._tUserRoles = new EntitySet<tUserRole>(new Action<tUserRole>(this.attach_tUserRoles), new Action<tUserRole>(this.detach_tUserRoles));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
	public string FullName
	{
		get
		{
			return this._FullName;
		}
		set
		{
			if ((this._FullName != value))
			{
				this.OnFullNameChanging(value);
				this.SendPropertyChanging();
				this._FullName = value;
				this.SendPropertyChanged("FullName");
				this.OnFullNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tCategory", Storage="_tCategories", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tCategory> tCategories
	{
		get
		{
			return this._tCategories;
		}
		set
		{
			this._tCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tCategory1", Storage="_tCategories1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tCategory> tCategories1
	{
		get
		{
			return this._tCategories1;
		}
		set
		{
			this._tCategories1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tFeedback", Storage="_tFeedbacks", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tFeedback> tFeedbacks
	{
		get
		{
			return this._tFeedbacks;
		}
		set
		{
			this._tFeedbacks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tFeedback1", Storage="_tFeedbacks1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tFeedback> tFeedbacks1
	{
		get
		{
			return this._tFeedbacks1;
		}
		set
		{
			this._tFeedbacks1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tMenu", Storage="_tMenus", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tMenu> tMenus
	{
		get
		{
			return this._tMenus;
		}
		set
		{
			this._tMenus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tMenu1", Storage="_tMenus1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tMenu> tMenus1
	{
		get
		{
			return this._tMenus1;
		}
		set
		{
			this._tMenus1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tNew", Storage="_tNews", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tNew> tNews
	{
		get
		{
			return this._tNews;
		}
		set
		{
			this._tNews.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tNew1", Storage="_tNews1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tNew> tNews1
	{
		get
		{
			return this._tNews1;
		}
		set
		{
			this._tNews1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPartner", Storage="_tPartners", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tPartner> tPartners
	{
		get
		{
			return this._tPartners;
		}
		set
		{
			this._tPartners.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPartner1", Storage="_tPartners1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tPartner> tPartners1
	{
		get
		{
			return this._tPartners1;
		}
		set
		{
			this._tPartners1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPersonal", Storage="_tPersonals", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tPersonal> tPersonals
	{
		get
		{
			return this._tPersonals;
		}
		set
		{
			this._tPersonals.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPersonal1", Storage="_tPersonals1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tPersonal> tPersonals1
	{
		get
		{
			return this._tPersonals1;
		}
		set
		{
			this._tPersonals1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tProduct", Storage="_tProducts", ThisKey="Id", OtherKey="CreateBy")]
	public EntitySet<tProduct> tProducts
	{
		get
		{
			return this._tProducts;
		}
		set
		{
			this._tProducts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tProduct1", Storage="_tProducts1", ThisKey="Id", OtherKey="ModifedBy")]
	public EntitySet<tProduct> tProducts1
	{
		get
		{
			return this._tProducts1;
		}
		set
		{
			this._tProducts1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tUserRole", Storage="_tUserRoles", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<tUserRole> tUserRoles
	{
		get
		{
			return this._tUserRoles;
		}
		set
		{
			this._tUserRoles.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tCategories(tCategory entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tCategories(tCategory entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tCategories1(tCategory entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tCategories1(tCategory entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tFeedbacks(tFeedback entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tFeedbacks(tFeedback entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tFeedbacks1(tFeedback entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tFeedbacks1(tFeedback entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tMenus(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tMenus(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tMenus1(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tMenus1(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tNews(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tNews(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tNews1(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tNews1(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tPartners(tPartner entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tPartners(tPartner entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tPartners1(tPartner entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tPartners1(tPartner entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tPersonals(tPersonal entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tPersonals(tPersonal entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tPersonals1(tPersonal entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tPersonals1(tPersonal entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tProducts(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tProducts(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
	
	private void attach_tProducts1(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = this;
	}
	
	private void detach_tProducts1(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tAccount1 = null;
	}
	
	private void attach_tUserRoles(tUserRole entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = this;
	}
	
	private void detach_tUserRoles(tUserRole entity)
	{
		this.SendPropertyChanging();
		entity.tAccount = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSlide")]
public partial class tSlide : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Image;
	
	private string _Caption;
	
	private string _Content;
	
	private string _Link;
	
	private System.Nullable<bool> _Type;
	
	private string _Style1;
	
	private string _Style2;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnTypeChanging(System.Nullable<bool> value);
    partial void OnTypeChanged();
    partial void OnStyle1Changing(string value);
    partial void OnStyle1Changed();
    partial void OnStyle2Changing(string value);
    partial void OnStyle2Changed();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tSlide()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(30)")]
	public string Caption
	{
		get
		{
			return this._Caption;
		}
		set
		{
			if ((this._Caption != value))
			{
				this.OnCaptionChanging(value);
				this.SendPropertyChanging();
				this._Caption = value;
				this.SendPropertyChanged("Caption");
				this.OnCaptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(30)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(50)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Bit")]
	public System.Nullable<bool> Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style1", DbType="VarChar(512)")]
	public string Style1
	{
		get
		{
			return this._Style1;
		}
		set
		{
			if ((this._Style1 != value))
			{
				this.OnStyle1Changing(value);
				this.SendPropertyChanging();
				this._Style1 = value;
				this.SendPropertyChanged("Style1");
				this.OnStyle1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style2", DbType="VarChar(512)")]
	public string Style2
	{
		get
		{
			return this._Style2;
		}
		set
		{
			if ((this._Style2 != value))
			{
				this.OnStyle2Changing(value);
				this.SendPropertyChanging();
				this._Style2 = value;
				this.SendPropertyChanged("Style2");
				this.OnStyle2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCategory")]
public partial class tCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Image;
	
	private string _Caption;
	
	private string _Content;
	
	private string _Icon;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntitySet<tProduct> _tProducts;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tCategory()
	{
		this._tProducts = new EntitySet<tProduct>(new Action<tProduct>(this.attach_tProducts), new Action<tProduct>(this.detach_tProducts));
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50)")]
	public string Caption
	{
		get
		{
			return this._Caption;
		}
		set
		{
			if ((this._Caption != value))
			{
				this.OnCaptionChanging(value);
				this.SendPropertyChanging();
				this._Caption = value;
				this.SendPropertyChanged("Caption");
				this.OnCaptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(1024)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="VarChar(64)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tCategory_tProduct", Storage="_tProducts", ThisKey="Id", OtherKey="CategoryId")]
	public EntitySet<tProduct> tProducts
	{
		get
		{
			return this._tProducts;
		}
		set
		{
			this._tProducts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tCategory", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tCategories.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tCategories.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tCategory1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tCategories1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tCategories1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tProducts(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tCategory = this;
	}
	
	private void detach_tProducts(tProduct entity)
	{
		this.SendPropertyChanging();
		entity.tCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tFeedback")]
public partial class tFeedback : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Position;
	
	private string _Content;
	
	private string _Image;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tFeedback()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(512)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tFeedback", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tFeedbacks.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tFeedbacks.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tFeedback1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tFeedbacks1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tFeedbacks1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMenu")]
public partial class tMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Code;
	
	private string _Name;
	
	private System.Nullable<int> _ParentId;
	
	private System.Nullable<double> _Position;
	
	private string _Link;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntitySet<tMenu> _tMenus;
	
	private EntitySet<tNew> _tNews;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
	private EntityRef<tMenu> _tMenu1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnPositionChanging(System.Nullable<double> value);
    partial void OnPositionChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tMenu()
	{
		this._tMenus = new EntitySet<tMenu>(new Action<tMenu>(this.attach_tMenus), new Action<tMenu>(this.detach_tMenus));
		this._tNews = new EntitySet<tNew>(new Action<tNew>(this.attach_tNews), new Action<tNew>(this.detach_tNews));
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		this._tMenu1 = default(EntityRef<tMenu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
	public System.Nullable<int> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				if (this._tMenu1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Float")]
	public System.Nullable<double> Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(50)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tMenu_tMenu", Storage="_tMenus", ThisKey="Id", OtherKey="ParentId")]
	public EntitySet<tMenu> tMenus
	{
		get
		{
			return this._tMenus;
		}
		set
		{
			this._tMenus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tMenu_tNew", Storage="_tNews", ThisKey="Id", OtherKey="MenuId")]
	public EntitySet<tNew> tNews
	{
		get
		{
			return this._tNews;
		}
		set
		{
			this._tNews.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tMenu", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tMenus.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tMenus.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tMenu1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tMenus1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tMenus1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tMenu_tMenu", Storage="_tMenu1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
	public tMenu tMenu1
	{
		get
		{
			return this._tMenu1.Entity;
		}
		set
		{
			tMenu previousValue = this._tMenu1.Entity;
			if (((previousValue != value) 
						|| (this._tMenu1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tMenu1.Entity = null;
					previousValue.tMenus.Remove(this);
				}
				this._tMenu1.Entity = value;
				if ((value != null))
				{
					value.tMenus.Add(this);
					this._ParentId = value.Id;
				}
				else
				{
					this._ParentId = default(Nullable<int>);
				}
				this.SendPropertyChanged("tMenu1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tMenus(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tMenu1 = this;
	}
	
	private void detach_tMenus(tMenu entity)
	{
		this.SendPropertyChanging();
		entity.tMenu1 = null;
	}
	
	private void attach_tNews(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tMenu = this;
	}
	
	private void detach_tNews(tNew entity)
	{
		this.SendPropertyChanging();
		entity.tMenu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNews")]
public partial class tNew : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Description;
	
	private string _Body;
	
	private string _Image;
	
	private System.Nullable<int> _MenuId;
	
	private string _Tag;
	
	private bool _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
	private EntityRef<tMenu> _tMenu;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnMenuIdChanging(System.Nullable<int> value);
    partial void OnMenuIdChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tNew()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		this._tMenu = default(EntityRef<tMenu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(128)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1024)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int")]
	public System.Nullable<int> MenuId
	{
		get
		{
			return this._MenuId;
		}
		set
		{
			if ((this._MenuId != value))
			{
				if (this._tMenu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMenuIdChanging(value);
				this.SendPropertyChanging();
				this._MenuId = value;
				this.SendPropertyChanged("MenuId");
				this.OnMenuIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(128)")]
	public string Tag
	{
		get
		{
			return this._Tag;
		}
		set
		{
			if ((this._Tag != value))
			{
				this.OnTagChanging(value);
				this.SendPropertyChanging();
				this._Tag = value;
				this.SendPropertyChanged("Tag");
				this.OnTagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tNew", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tNews.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tNews.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tNew1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tNews1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tNews1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tMenu_tNew", Storage="_tMenu", ThisKey="MenuId", OtherKey="Id", IsForeignKey=true)]
	public tMenu tMenu
	{
		get
		{
			return this._tMenu.Entity;
		}
		set
		{
			tMenu previousValue = this._tMenu.Entity;
			if (((previousValue != value) 
						|| (this._tMenu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tMenu.Entity = null;
					previousValue.tNews.Remove(this);
				}
				this._tMenu.Entity = value;
				if ((value != null))
				{
					value.tNews.Add(this);
					this._MenuId = value.Id;
				}
				else
				{
					this._MenuId = default(Nullable<int>);
				}
				this.SendPropertyChanged("tMenu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPartner")]
public partial class tPartner : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Image;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tPartner()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPartner", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tPartners.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tPartners.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPartner1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tPartners1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tPartners1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPersonal")]
public partial class tPersonal : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Position;
	
	private string _Description;
	
	private string _Image;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tPersonal()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
	public string Position
	{
		get
		{
			return this._Position;
		}
		set
		{
			if ((this._Position != value))
			{
				this.OnPositionChanging(value);
				this.SendPropertyChanging();
				this._Position = value;
				this.SendPropertyChanged("Position");
				this.OnPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPersonal", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tPersonals.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tPersonals.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tPersonal1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tPersonals1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tPersonals1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tProduct")]
public partial class tProduct : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Code;
	
	private string _Name;
	
	private System.Nullable<int> _CategoryId;
	
	private string _Image;
	
	private System.Nullable<bool> _IsActive;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tAccount> _tAccount1;
	
	private EntityRef<tCategory> _tCategory;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryIdChanging(System.Nullable<int> value);
    partial void OnCategoryIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tProduct()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tAccount1 = default(EntityRef<tAccount>);
		this._tCategory = default(EntityRef<tCategory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int")]
	public System.Nullable<int> CategoryId
	{
		get
		{
			return this._CategoryId;
		}
		set
		{
			if ((this._CategoryId != value))
			{
				if (this._tCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryIdChanging(value);
				this.SendPropertyChanging();
				this._CategoryId = value;
				this.SendPropertyChanged("CategoryId");
				this.OnCategoryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(64)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				if (this._tAccount1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tProduct", Storage="_tAccount", ThisKey="CreateBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tProducts.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tProducts.Add(this);
					this._CreateBy = value.Id;
				}
				else
				{
					this._CreateBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tProduct1", Storage="_tAccount1", ThisKey="ModifedBy", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount1
	{
		get
		{
			return this._tAccount1.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount1.Entity;
			if (((previousValue != value) 
						|| (this._tAccount1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount1.Entity = null;
					previousValue.tProducts1.Remove(this);
				}
				this._tAccount1.Entity = value;
				if ((value != null))
				{
					value.tProducts1.Add(this);
					this._ModifedBy = value.Id;
				}
				else
				{
					this._ModifedBy = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tCategory_tProduct", Storage="_tCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
	public tCategory tCategory
	{
		get
		{
			return this._tCategory.Entity;
		}
		set
		{
			tCategory previousValue = this._tCategory.Entity;
			if (((previousValue != value) 
						|| (this._tCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tCategory.Entity = null;
					previousValue.tProducts.Remove(this);
				}
				this._tCategory.Entity = value;
				if ((value != null))
				{
					value.tProducts.Add(this);
					this._CategoryId = value.Id;
				}
				else
				{
					this._CategoryId = default(Nullable<int>);
				}
				this.SendPropertyChanged("tCategory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSetting")]
public partial class tSetting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Code;
	
	private string _Title1;
	
	private string _Title2;
	
	private string _Title3;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitle1Changing(string value);
    partial void OnTitle1Changed();
    partial void OnTitle2Changing(string value);
    partial void OnTitle2Changed();
    partial void OnTitle3Changing(string value);
    partial void OnTitle3Changed();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tSetting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(20)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title1", DbType="NVarChar(128)")]
	public string Title1
	{
		get
		{
			return this._Title1;
		}
		set
		{
			if ((this._Title1 != value))
			{
				this.OnTitle1Changing(value);
				this.SendPropertyChanging();
				this._Title1 = value;
				this.SendPropertyChanged("Title1");
				this.OnTitle1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title2", DbType="NVarChar(512)")]
	public string Title2
	{
		get
		{
			return this._Title2;
		}
		set
		{
			if ((this._Title2 != value))
			{
				this.OnTitle2Changing(value);
				this.SendPropertyChanging();
				this._Title2 = value;
				this.SendPropertyChanged("Title2");
				this.OnTitle2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title3", DbType="NVarChar(1024)")]
	public string Title3
	{
		get
		{
			return this._Title3;
		}
		set
		{
			if ((this._Title3 != value))
			{
				this.OnTitle3Changing(value);
				this.SendPropertyChanging();
				this._Title3 = value;
				this.SendPropertyChanged("Title3");
				this.OnTitle3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tUserRole")]
public partial class tUserRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _RoleId;
	
	private System.Nullable<int> _UserId;
	
	private System.Nullable<bool> _sView;
	
	private System.Nullable<bool> _sInsert;
	
	private System.Nullable<bool> _sModifie;
	
	private System.Nullable<bool> _sDel;
	
	private System.Nullable<System.DateTime> _CreateAt;
	
	private System.Nullable<int> _CreateBy;
	
	private System.Nullable<System.DateTime> _ModifiedAt;
	
	private System.Nullable<int> _ModifedBy;
	
	private EntityRef<tAccount> _tAccount;
	
	private EntityRef<tRole> _tRole;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnsViewChanging(System.Nullable<bool> value);
    partial void OnsViewChanged();
    partial void OnsInsertChanging(System.Nullable<bool> value);
    partial void OnsInsertChanged();
    partial void OnsModifieChanging(System.Nullable<bool> value);
    partial void OnsModifieChanged();
    partial void OnsDelChanging(System.Nullable<bool> value);
    partial void OnsDelChanged();
    partial void OnCreateAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateAtChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnModifedByChanging(System.Nullable<int> value);
    partial void OnModifedByChanged();
    #endregion
	
	public tUserRole()
	{
		this._tAccount = default(EntityRef<tAccount>);
		this._tRole = default(EntityRef<tRole>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
	public System.Nullable<int> RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._tRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
	public System.Nullable<int> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._tAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sView", DbType="Bit")]
	public System.Nullable<bool> sView
	{
		get
		{
			return this._sView;
		}
		set
		{
			if ((this._sView != value))
			{
				this.OnsViewChanging(value);
				this.SendPropertyChanging();
				this._sView = value;
				this.SendPropertyChanged("sView");
				this.OnsViewChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInsert", DbType="Bit")]
	public System.Nullable<bool> sInsert
	{
		get
		{
			return this._sInsert;
		}
		set
		{
			if ((this._sInsert != value))
			{
				this.OnsInsertChanging(value);
				this.SendPropertyChanging();
				this._sInsert = value;
				this.SendPropertyChanged("sInsert");
				this.OnsInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sModifie", DbType="Bit")]
	public System.Nullable<bool> sModifie
	{
		get
		{
			return this._sModifie;
		}
		set
		{
			if ((this._sModifie != value))
			{
				this.OnsModifieChanging(value);
				this.SendPropertyChanging();
				this._sModifie = value;
				this.SendPropertyChanged("sModifie");
				this.OnsModifieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDel", DbType="Bit")]
	public System.Nullable<bool> sDel
	{
		get
		{
			return this._sDel;
		}
		set
		{
			if ((this._sDel != value))
			{
				this.OnsDelChanging(value);
				this.SendPropertyChanging();
				this._sDel = value;
				this.SendPropertyChanged("sDel");
				this.OnsDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateAt
	{
		get
		{
			return this._CreateAt;
		}
		set
		{
			if ((this._CreateAt != value))
			{
				this.OnCreateAtChanging(value);
				this.SendPropertyChanging();
				this._CreateAt = value;
				this.SendPropertyChanged("CreateAt");
				this.OnCreateAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
	public System.Nullable<int> CreateBy
	{
		get
		{
			return this._CreateBy;
		}
		set
		{
			if ((this._CreateBy != value))
			{
				this.OnCreateByChanging(value);
				this.SendPropertyChanging();
				this._CreateBy = value;
				this.SendPropertyChanged("CreateBy");
				this.OnCreateByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedAt
	{
		get
		{
			return this._ModifiedAt;
		}
		set
		{
			if ((this._ModifiedAt != value))
			{
				this.OnModifiedAtChanging(value);
				this.SendPropertyChanging();
				this._ModifiedAt = value;
				this.SendPropertyChanged("ModifiedAt");
				this.OnModifiedAtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifedBy", DbType="Int")]
	public System.Nullable<int> ModifedBy
	{
		get
		{
			return this._ModifedBy;
		}
		set
		{
			if ((this._ModifedBy != value))
			{
				this.OnModifedByChanging(value);
				this.SendPropertyChanging();
				this._ModifedBy = value;
				this.SendPropertyChanged("ModifedBy");
				this.OnModifedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tAccount_tUserRole", Storage="_tAccount", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
	public tAccount tAccount
	{
		get
		{
			return this._tAccount.Entity;
		}
		set
		{
			tAccount previousValue = this._tAccount.Entity;
			if (((previousValue != value) 
						|| (this._tAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tAccount.Entity = null;
					previousValue.tUserRoles.Remove(this);
				}
				this._tAccount.Entity = value;
				if ((value != null))
				{
					value.tUserRoles.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(Nullable<int>);
				}
				this.SendPropertyChanged("tAccount");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tRole_tUserRole", Storage="_tRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
	public tRole tRole
	{
		get
		{
			return this._tRole.Entity;
		}
		set
		{
			tRole previousValue = this._tRole.Entity;
			if (((previousValue != value) 
						|| (this._tRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tRole.Entity = null;
					previousValue.tUserRoles.Remove(this);
				}
				this._tRole.Entity = value;
				if ((value != null))
				{
					value.tUserRoles.Add(this);
					this._RoleId = value.Id;
				}
				else
				{
					this._RoleId = default(Nullable<int>);
				}
				this.SendPropertyChanged("tRole");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tRole")]
public partial class tRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _ModuleCode;
	
	private string _ModuleName;
	
	private EntitySet<tUserRole> _tUserRoles;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnModuleCodeChanging(string value);
    partial void OnModuleCodeChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    #endregion
	
	public tRole()
	{
		this._tUserRoles = new EntitySet<tUserRole>(new Action<tUserRole>(this.attach_tUserRoles), new Action<tUserRole>(this.detach_tUserRoles));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleCode", DbType="VarChar(50)")]
	public string ModuleCode
	{
		get
		{
			return this._ModuleCode;
		}
		set
		{
			if ((this._ModuleCode != value))
			{
				this.OnModuleCodeChanging(value);
				this.SendPropertyChanging();
				this._ModuleCode = value;
				this.SendPropertyChanged("ModuleCode");
				this.OnModuleCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(50)")]
	public string ModuleName
	{
		get
		{
			return this._ModuleName;
		}
		set
		{
			if ((this._ModuleName != value))
			{
				this.OnModuleNameChanging(value);
				this.SendPropertyChanging();
				this._ModuleName = value;
				this.SendPropertyChanged("ModuleName");
				this.OnModuleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tRole_tUserRole", Storage="_tUserRoles", ThisKey="Id", OtherKey="RoleId")]
	public EntitySet<tUserRole> tUserRoles
	{
		get
		{
			return this._tUserRoles;
		}
		set
		{
			this._tUserRoles.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tUserRoles(tUserRole entity)
	{
		this.SendPropertyChanging();
		entity.tRole = this;
	}
	
	private void detach_tUserRoles(tUserRole entity)
	{
		this.SendPropertyChanging();
		entity.tRole = null;
	}
}
#pragma warning restore 1591
